{"data":{"markdownRemark":{"html":"<blockquote>\n<p>在之前的文章<a href=\"/posts/pre-deep-into-egg-core\">深入egg-core前篇</a>中已经讲述了一个道理，node之所以没有成为一个比较流行的服务器语言，是因为node需要一个企业级的框架。而egg或许是一个不错的选择，针对egg-core的内部实现，将会在这篇文章中作出探索。</p>\n</blockquote>\n<p>初始化Egg的项目后，如果我们没有在<code class=\"language-text\">config</code>中设置类似于:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span>keys <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`&lt;your keys>`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>启动egg应用后请求接口，不出意外应该会获得一个异常:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Cookie need secret key to sign and encrypt.\nPlease add `config.keys` in /xxxxxx/config.xxxx.js</code></pre></div>\n<p>我们在配置中定义的一般是插件配置或者自己需求的自定义配置，比如<a href=\"https://eggjs.org/zh-cn/advanced/view-plugin.html#%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE\">插件配置的规范</a>中会定义config的键值为插件名，那么令我们奇怪的是，<code class=\"language-text\">keys</code>这个配置是怎么来的？</p>\n<p>当我们读文档到了<a href=\"https://eggjs.org/zh-cn/core/cookie-and-session.html#cookie-%E7%A7%98%E9%92%A5\">cookie与session</a>的时候就会知道，这个<code class=\"language-text\">keys</code>是cookie在加密解密的时候的秘钥，而这个秘钥是可以通过,分割的，可以使用多个秘钥，这是用于灰度更新秘钥的，egg会使用最新的key来加密，而解密的时候会从新到旧的逐个解密，用于兼容老的秘钥生成的cookie，可以说在这点对于开发者的体验非常好了。</p>\n<p>令人不舒服的是，这个<code class=\"language-text\">keys</code>可以说是'空降'的，我们可以说是一脸懵逼的接住了这个配置。但是其实这个算是一个egg内建framework的一个配置。</p>\n<p>在egg这个包是egg官方为我们提供的一个framework，在这个包里面我们可以搜索到<code class=\"language-text\">config.keys</code>的用法:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// application.js</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">KEYS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>env <span class=\"token operator\">===</span> <span class=\"token string\">'local'</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>env <span class=\"token operator\">===</span> <span class=\"token string\">'unittest'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> configPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>baseDir<span class=\"token punctuation\">,</span> <span class=\"token string\">'config/config.default.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cookie need secret key to sign and encrypt.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please add `config.keys` in %s'</span><span class=\"token punctuation\">,</span> configPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Please set config.keys first'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">KEYS</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">=></span> s<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">KEYS</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>在app的原型链上加上一个keys的只读属性，这个属性会读取<code class=\"language-text\">config.keys</code>，如果没有读取到<code class=\"language-text\">config.keys</code>，会直接抛出异常，这也是我们刚开始提到的，为什么在你不设置<code class=\"language-text\">config.keys</code>的时候，会抛出异常了。</p>\n<p>而<code class=\"language-text\">app.keys</code>只是在<code class=\"language-text\">extends/context.js</code>中被使用的:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// context.js</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">cookies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">COOKIES</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">COOKIES</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">this<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>ContextCookies</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">COOKIES</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">extends/context.js</code>在framework中是用于扩展egg中的几个基本对象的。这里应该是覆盖了Koa原本的cookies的原型，查看了一下Koa源码:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">get</span> <span class=\"token function\">cookies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">COOKIES</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">COOKIES</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cookies</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>res<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        keys<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">,</span>\n        secure<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>secure\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">COOKIES</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>总的来看，只是Cookie的实现从<a href=\"https://github.com/pillarjs/cookies\">cookies</a>变为了<a href=\"https://github.com/eggjs/egg-cookies\">egg-cookies</a>，这两个包还没有深究究竟有什么不同点，根据官方的说法，egg-cookies是cookies的扩展:</p>\n<blockquote>\n<p>Extends pillarjs/cookies to adapt koa and egg with some additional features.</p>\n</blockquote>\n<p>但是看起来好像只要我们不调用<code class=\"language-text\">ctx.cookies</code>就不会报错，这样好像我们刚开始的报错就说不通了。所以问题就变成了是什么时候调用了<code class=\"language-text\">ctx.cookies</code>呢。</p>\n<p>我们并没有在egg框架中找到<code class=\"language-text\">ctx.cookies</code>的使用，所以目标就锁定在了egg的默认插件中。在<a href=\"https://eggjs.org/zh-cn/basics/plugin.html#%E6%8F%92%E4%BB%B6%E5%88%97%E8%A1%A8\">文档</a>中和源码中我们都能了解到，egg的默认插件有</p>\n<ul>\n<li><a href=\"https://github.com/eggjs/egg-onerror\">onerror</a> 统一异常处理</li>\n<li><a href=\"https://github.com/eggjs/egg-session\">Session</a> Session 实现</li>\n<li><a href=\"https://github.com/eggjs/egg-i18n\">i18n</a> 多语言</li>\n<li><a href=\"https://github.com/eggjs/egg-watcher\">watcher</a> 文件和文件夹监控</li>\n<li><a href=\"https://github.com/eggjs/egg-multipart\">multipart</a> 文件流式上传</li>\n<li><a href=\"https://github.com/eggjs/egg-security\">security</a> 安全</li>\n<li><a href=\"https://github.com/eggjs/egg-development\">development</a> 开发环境配置</li>\n<li><a href=\"https://github.com/eggjs/egg-logrotator\">logrotator</a> 日志切分</li>\n<li><a href=\"https://github.com/eggjs/egg-schedule\">schedule</a> 定时任务</li>\n<li><a href=\"https://github.com/eggjs/egg-static\">static</a> 静态服务器</li>\n<li><a href=\"https://github.com/eggjs/egg-jsonp\">jsonp</a> jsonp 支持</li>\n<li><a href=\"https://github.com/eggjs/egg-view\">view</a> 模板引擎</li>\n</ul>\n<p>egg-session其实就是使用了koa-session的插件，外加上一个关于application的扩展，koa-session是使用<code class=\"language-text\">ctx.cookies</code>的，因此使用这个插件的话，需要<code class=\"language-text\">exports.keys</code>这个配置。</p>\n<p>但我们尝试将将一下代码写到插件配置中的时候:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">exports<span class=\"token punctuation\">.</span>session <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  enable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>重新启动egg服务，当我们访问页面的时候依旧会报错，从报错信息来看，会发现可以追溯到<code class=\"language-text\">egg-security</code>。关于这个包将来会有个主题来讲述的，不会再这里展开。</p>\n<p>其实只是一个简单的<code class=\"language-text\">keys</code>的配置，啰嗦了半天。总是感觉不舒服，因为其实keys的依赖非常难找到，而且并不像插件依赖或者框架依赖描述得这么清晰，我觉得这可能是egg里面一个比价尴尬的设计。</p>","frontmatter":{"title":"Egg项目中配置文件的keys","date":"28 December, 2018","tag":"node,egg"},"excerpt":"在之前的文章 深入egg-core前篇 中已经讲述了一个道理，node之所以没有成为一个比较流行的服务器语言，是因为node需要一个企业级的框架。而egg或许是一个不错的选择，针对egg-core的内部实现，将会在这篇文章中作出探索。 初始化Egg…"}},"pageContext":{"slug":"what-is-config-keys-doing"}}